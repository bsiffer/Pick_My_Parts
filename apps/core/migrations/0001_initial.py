# Generated by Django 5.1.6 on 2025-03-23 08:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoolingAccessory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cooling_type', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('architecture', models.CharField(max_length=255)),
                ('clock_speed', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ddr4_compatibility', models.BooleanField(default=False)),
                ('ddr5_compatibility', models.BooleanField(default=False)),
                ('socket_type', models.CharField(max_length=255)),
                ('wattage_compatibility', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bios_compatibility', models.BooleanField(default=False)),
                ('chipset_compatibility', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('architecture', models.CharField(max_length=255)),
                ('memory_bus', models.IntegerField()),
                ('pcie_standard', models.CharField(max_length=255)),
                ('slot_size', models.CharField(max_length=255)),
                ('length_in_mm', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cooling_type', models.CharField(max_length=255)),
                ('power_requirement', models.DecimalField(decimal_places=2, max_digits=10)),
                ('power_connectors', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('socket_type', models.CharField(max_length=255)),
                ('form_factor', models.CharField(max_length=255)),
                ('ram_slots', models.IntegerField()),
                ('supported_ram_type', models.CharField(max_length=255)),
                ('chipset_compatibility', models.CharField(max_length=255)),
                ('bios_compatibility', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('size_standard', models.CharField(max_length=255)),
                ('rated_wattage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('certification_level', models.CharField(max_length=255)),
                ('modular', models.CharField(max_length=255)),
                ('efficiency_rating_percentage', models.DecimalField(decimal_places=2, max_digits=3)),
                ('pcie_connectors', models.IntegerField()),
                ('length_in_mm', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('capacity_in_gb', models.IntegerField()),
                ('ddr_standard', models.CharField(max_length=255)),
                ('speed_in_mhz', models.IntegerField()),
                ('sticks', models.IntegerField()),
                ('latency', models.CharField(max_length=255)),
                ('rgb', models.BooleanField()),
                ('color', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('storage_type', models.CharField(max_length=255)),
                ('capacity_in_GB', models.IntegerField()),
                ('interface', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComputerCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.IntegerField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color', models.CharField(max_length=255)),
                ('form_factor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_cases', to='core.formfactor')),
                ('supported_form_factors', models.ManyToManyField(related_name='compatible_cases', to='core.formfactor')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
